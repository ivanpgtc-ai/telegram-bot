import os
import asyncio
from aiohttp import web
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
)
from openai import OpenAI

# --- ENV ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
PUBLIC_URL     = os.getenv("PUBLIC_URL")  # –Ω–∞–ø—Ä. https://telegram-bot-emnu.onrender.com
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
WEBHOOK_PATH   = "/webhook"

client = OpenAI(api_key=OPENAI_API_KEY)

# --- –ö–æ–º–∞–Ω–¥—ã ---
async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –Ω–∞ –±–∞–∑–µ OpenAI. –ü–∏—à–∏ –∑–∞–ø—Ä–æ—Å ‚Äî –æ—Ç–≤–µ—á—É –ø–æ –¥–µ–ª—É ‚öôÔ∏è"
    )

async def cmd_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–Ø –æ—Ç–≤–µ—á–∞—é –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–≥–∞—é —Å —Ä–∞–±–æ—á–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏.\n"
        "‚ñ™Ô∏è /start ‚Äî –∑–∞–ø—É—Å–∫\n"
        "‚ñ™Ô∏è –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç ‚Äî –ø–æ–ª—É—á–∏—à—å –æ—Ç–≤–µ—Ç –ò–ò"
    )

# --- AI-–æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç ---
async def ai_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = (update.message.text or "").strip()
    if not user_text:
        return

    try:
        resp = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {
                    "role": "system",
                    "content": (
                        "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏. "
                        "–û—Ç–≤–µ—á–∞–π –ø–æ-–¥–µ–ª–æ–≤–æ–º—É, —á–µ—Å—Ç–Ω–æ, –±–µ–∑ –≤–æ–¥—ã; –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –∂–∞—Ä–≥–æ–Ω. "
                        "–°–º–æ—Ç—Ä–∏ –≤ –±—É–¥—É—â–µ–µ, –ø—Ä–µ–¥–ª–∞–≥–∞–π —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏. –û—Ç–≤–µ—á–∞–π –ø–æ-—Ä—É—Å—Å–∫–∏."
                    )
                },
                {"role": "user", "content": user_text},
            ],
            temperature=0.3,
            max_tokens=600,
        )
        answer = resp.choices[0].message.content.strip()
        await update.message.reply_text(answer[:4000])  # –ª–∏–º–∏—Ç —Ç–µ–ª–µ–≥–∏
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –ò–ò. –ü—Ä–æ–≤–µ—Ä—å —Ç–æ–∫–µ–Ω/–ª–∏–º–∏—Ç—ã.")
        print("OpenAI error:", e)

# --- Health-check ---
async def health(_request): return web.Response(text="OK")

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ—Ç Telegram ---
async def tg_webhook(request):
    data = await request.json()
    await application.update_queue.put(Update.de_json(data, application.bot))
    return web.Response(text="ok")

# --- –ì–ª–∞–≤–Ω–∞—è –∫–æ—Ä—É—Ç–∏–Ω–∞ ---
async def main():
    global application
    application = ApplicationBuilder().token(TELEGRAM_TOKEN).updater(None).build()

    # –•–µ–Ω–¥–ª–µ—Ä—ã
    application.add_handler(CommandHandler("start", cmd_start))
    application.add_handler(CommandHandler("help", cmd_help))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, ai_reply))

    # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ —Å—Ç–∞—Ä—Ç–∞
    await application.initialize()

    # AIOHTTP-—Å–µ—Ä–≤–µ—Ä
    app = web.Application()
    app.router.add_get("/", health)
    app.router.add_post(WEBHOOK_PATH, tg_webhook)

    # –í–µ–±—Ö—É–∫
    webhook_url = f"{PUBLIC_URL}{WEBHOOK_PATH}"
    await application.bot.set_webhook(url=webhook_url, drop_pending_updates=True)

    runner = web.AppRunner(app)
    await runner.setup()
    port = int(os.environ.get("PORT", 8080))
    site = web.TCPSite(runner, "0.0.0.0", port)
    await site.start()

    print("üöÄ Bot is running with webhook:", webhook_url)
    await application.start()
    await asyncio.Event().wait()

if __name__ == "__main__":
    asyncio.run(main())
